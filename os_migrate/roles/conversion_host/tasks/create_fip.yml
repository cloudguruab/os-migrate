- name: create the conversion host floating IP with a predefined IP
  openstack.cloud.floating_ip:
    server: "{{ os_migrate_conversion_host_name }}"
    nat_destination: "{{ os_migrate_conversion_net_name }}"
    network: "{{ os_migrate_conversion_external_network_name }}"
    floating_ip_address: "{{ os_migrate_conversion_floating_ip_address|default(omit) }}"
    state: present
    wait: true
    timeout: "{{ os_migrate_conversion_host_deploy_timeout }}"
    reuse: true
    cloud: "{{ os_migrate_conversion_cloud }}"
    validate_certs: "{{ os_migrate_conversion_validate_certs|default(omit) }}"
    ca_cert: "{{ os_migrate_conversion_ca_cert|default(omit) }}"
    client_cert: "{{ os_migrate_conversion_client_cert|default(omit) }}"
    client_key: "{{ os_migrate_conversion_client_key|default(omit) }}"
  when: os_migrate_conversion_floating_ip_address is defined and os_migrate_conversion_floating_ip_address is string

- name: create the conversion host floating IP with auto IP enabled
  register: floating_ip
  ansible.builtin.shell: |
    openstack floating ip create {{ os_migrate_conversion_external_network_name }} \
      --os-cloud {{ os_migrate_conversion_cloud }} --insecure| grep ' id ' | awk '{print $4}'
  args:
    executable: /bin/bash
  when: os_migrate_conversion_floating_ip_address is defined and not os_migrate_conversion_floating_ip_address

  # openstack.cloud.floating_ip:
  #   server: "{{ os_migrate_conversion_host_name }}"
  #   network: "{{ os_migrate_conversion_external_network_name }}"
  #   nat_destination: "{{ os_migrate_conversion_net_name }}"
  #   state: present
  #   wait: true
  #   timeout: "{{ os_migrate_conversion_host_deploy_timeout }}"
  #   reuse: true
  #   cloud: "{{ os_migrate_conversion_cloud }}"
  #   validate_certs: "{{ os_migrate_conversion_validate_certs|default(omit) }}"
  #   ca_cert: "{{ os_migrate_conversion_ca_cert|default(omit) }}"
  #   client_cert: "{{ os_migrate_conversion_client_cert|default(omit) }}"
  #   client_key: "{{ os_migrate_conversion_client_key|default(omit) }}"
  # when: os_migrate_conversion_floating_ip_address is defined and not os_migrate_conversion_floating_ip_address
- name: set floating_ip_address
  ansible.builtin.shell: |
    openstack server add floating ip {{ os_migrate_conversion_host_name }} {{ floating_ip.stdout }} \
      --os-cloud {{ os_migrate_conversion_cloud }} --insecure
  args:
    executable: /bin/bash
  when: os_migrate_conversion_floating_ip_address is defined and not os_migrate_conversion_floating_ip_address
